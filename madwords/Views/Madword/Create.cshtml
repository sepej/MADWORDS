@model Madword

@{
    var random = new Random();
    string[] write = { "Write", "Scribble", "Create", "Compose", "Sling", "Shoot", "Journal", "Ink", "Jot down", "Sign", "Scrawl" };
    string writeTitle = write[random.Next(write.Length)];

    ViewData["Title"] = writeTitle + " some MADWORD";
}

<div class="text-center">
    @if (Model != null)
    {
        <h1 class="jumbotron">Your MADWORD</h1>
        <div>
            <h3>@Model.MadwordTitle</h3>
            <p><strong>@Model.MadwordText</strong></p>
            <p>By @Model.Author.Name</p>
            <p><small>@Model.MadwordDate</small></p>
        </div>

        <div class="container mt-3 p-5 text-center">
            <a class="nav-link text-dark" asp-area="" asp-controller="Madword" asp-action="Create"><strong>MAKE MORE WORD</strong></a>
        </div>
    }
    else
    {
        <h1 class="jumbotron">@ViewData["Title"]</h1>

        <form method="post">
            <div class="row p-2 text-justify">
                <div class="col-sm-3 my-1">
                    <h3>MADWORD</h3>
                </div>
            </div>
            <div class="form-row align-items-center" id="madwords">

            </div>
            <div class="row p-2 text-justify">
                <div class="col-sm-6 my-1">
                    <h3>Title</h3>
                    <p>Title your MADWORD based on the words you entered.</p>
                    <input asp-for="MadwordTitle" class="form-control col-sm-9 col-md-11 titleword" id="Title" placeholder="" required />
                </div>
            </div>
            <div class="row p-2 text-justify">
                <div class="col-sm-3 my-1">
                    <button type="submit" class="btn btn-primary" id="submitbtn">Submit</button>
                </div>
            </div>
            <input asp-for="MadwordText" type="text" id="words" hidden />
        </form>
    }
</div>


@section Scripts
{
    <script>
        
        var templates = [];
        
        //fetch('https://madwords.donttelljoseph.com/api/MadwordTemplate')
        fetch('https://localhost:44380/api/MadwordTemplate')
            .then(response => {
                const contentType = response.headers.get('content-type');
                if (!contentType || !contentType.includes('application/json')) {
                    throw new TypeError("No JSON");
                }
                return response.json();
            })
            .then(data => {
                console.log(data);
                templates = data;
                var templateNumber = Math.floor((Math.random() * templates.length));
                var templateText = templates[templateNumber].madwordTemplateText;
                generateTemplate(templateText);
            })
            .catch(error => console.error(error));
        
        var stories = {
            "story": [
                {
                    "text": "",
                    "blanks": []
                }]
        }

        function generateTemplate(templateText) {
            let theTemplate = templateText.split(" ");
            theTemplate.forEach(element => extractBlanks(element));
            theTemplate.forEach((element, index) => theTemplate[index] = createText(element));

            stories.story[0].text = theTemplate.join([' ']);
            stories.story[0].blanks.forEach(addWord);
        }

        function extractBlanks(arrayElement) {
            if (arrayElement.startsWith("[") && arrayElement.endsWith("]")){
                stories.story[0].blanks.push(arrayElement.substring(1, arrayElement.length - 1));
            }
        }
        function createText(arrayElement) {
            if (arrayElement.startsWith("[") && arrayElement.endsWith("]")) {
                return "*";
            }
            return arrayElement;
        }

        function addWord(item, index) {
            document.getElementById("madwords").innerHTML += `
            <div class="col-sm-3 my-1">
                <label>${item}</label>
                <input type="text" class="form-control word" placeholder="" required>
            </div>
            `;
        }

    </script>
}
